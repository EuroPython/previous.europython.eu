{"pageProps":{"path":"/session/mercury-build-share-data-apps-from-jupyter-notebook","session":{"code":"CJNVSR","title":"Mercury - Build & Share Data Apps from Jupyter Notebook","speakers":[{"code":"JWK7RV","name":"Piotr Płoński","biography":"Software engineer with a passion for creating Data Science tools. Working on Mercury (framework for converting notebooks to web apps) and MLJAR AutoML (Automatic Machine Learning for Tabular Data).","avatar":"https://program.europython.eu/media/avatars/pplonski_smile_Mz6QCW4.jpeg","slug":"piotr-plonski","affiliation":"MLJAR Sp. z o.o.","homepage":"https://mljar.com","twitter":"MLJARofficial","biographySource":{"compiledSource":"var M=Object.defineProperty,D=Object.defineProperties;var f=Object.getOwnPropertyDescriptors;var e=Object.getOwnPropertySymbols;var i=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable;var p=(o,n,t)=>n in o?M(o,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[n]=t,r=(o,n)=>{for(var t in n||(n={}))i.call(n,t)&&p(o,t,n[t]);if(e)for(var t of e(n))c.call(n,t)&&p(o,t,n[t]);return o},u=(o,n)=>D(o,f(n));var s=(o,n)=>{var t={};for(var a in o)i.call(o,a)&&n.indexOf(a)<0&&(t[a]=o[a]);if(o!=null&&e)for(var a of e(o))n.indexOf(a)<0&&c.call(o,a)&&(t[a]=o[a]);return t};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var a=t,{components:o}=a,n=s(a,[\"components\"]);return mdx(MDXLayout,u(r(r({},layoutProps),n),{components:o,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"Software engineer with a passion for creating Data Science tools. Working on Mercury (framework for converting notebooks to web apps) and MLJAR AutoML (Automatic Machine Learning for Tabular Data).\"))}MDXContent.isMDXComponent=!0;\n","scope":{}}}],"submission_type":"Talk","slug":"mercury-build-share-data-apps-from-jupyter-notebook","track":"PyData: Software Packages & Jupyter","state":"confirmed","abstract":"Have you ever wished to magically transform your notebook into a web app and share it with non-coders? The [Mercury](https://github.com/mljar/mercury) is a new open-source framework for converting Jupyter Notebook to a web app.","abstract_as_a_tweet":"Magically transform your Python notebook to web app with Mercury!","description":"The [Mercury](https://github.com/mljar/mercury) is a new framework for converting Jupyter Notebook to a web app. The widgets are constructed based on the YAML config (similar to R Markdown). The user can tweak the values of the widgets and execute the notebook from the top to the bottom. The notebook sharing is as simple as sending a link. What is more, you can decide whether to show or hide the code.\r\n\r\nIn the talk, I would like to show how the Python notebook can be converted to a web app and deployed to the cloud.","duration":"30","python_level":"some","domain_level":"none","delivery":"remote","room":"Liffey Hall 2","start":"2022-07-15T11:20:00+01:00","end":"2022-07-15T11:50:00+01:00","talks_in_parallel":["87XUMG","GRG9SC","S78FW7","YJYBHC","ZGSULC"],"talks_after":["GFGSGN","HE98XH","LLC3KD","MBJUKF","MMWYWZ","PQADBJ","TE7K7D"],"next_talk_code":"PQADBJ","prev_talk_code":null,"website_url":"https://ep2022.europython.eu/session/mercury-build-share-data-apps-from-jupyter-notebook","type":"Talk","abstractSource":{"compiledSource":"var i=Object.defineProperty,m=Object.defineProperties;var h=Object.getOwnPropertyDescriptors;var a=Object.getOwnPropertySymbols;var p=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable;var s=(o,e,t)=>e in o?i(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t,n=(o,e)=>{for(var t in e||(e={}))p.call(e,t)&&s(o,t,e[t]);if(a)for(var t of a(e))u.call(e,t)&&s(o,t,e[t]);return o},c=(o,e)=>m(o,h(e));var y=(o,e)=>{var t={};for(var r in o)p.call(o,r)&&e.indexOf(r)<0&&(t[r]=o[r]);if(o!=null&&a)for(var r of a(o))e.indexOf(r)<0&&u.call(o,r)&&(t[r]=o[r]);return t};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var r=t,{components:o}=r,e=y(r,[\"components\"]);return mdx(MDXLayout,c(n(n({},layoutProps),e),{components:o,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"Have you ever wished to magically transform your notebook into a web app and share it with non-coders? The \",mdx(\"a\",n({parentName:\"p\"},{href:\"https://github.com/mljar/mercury\"}),\"Mercury\"),\" is a new open-source framework for converting Jupyter Notebook to a web app.\"))}MDXContent.isMDXComponent=!0;\n","scope":{}},"descriptionSource":{"compiledSource":"var d=Object.defineProperty,u=Object.defineProperties;var w=Object.getOwnPropertyDescriptors;var a=Object.getOwnPropertySymbols;var h=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable;var p=(e,o,t)=>o in e?d(e,o,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[o]=t,r=(e,o)=>{for(var t in o||(o={}))h.call(o,t)&&p(e,t,o[t]);if(a)for(var t of a(o))s.call(o,t)&&p(e,t,o[t]);return e},c=(e,o)=>u(e,w(o));var i=(e,o)=>{var t={};for(var n in e)h.call(e,n)&&o.indexOf(n)<0&&(t[n]=e[n]);if(e!=null&&a)for(var n of a(e))o.indexOf(n)<0&&s.call(e,n)&&(t[n]=e[n]);return t};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var n=t,{components:e}=n,o=i(n,[\"components\"]);return mdx(MDXLayout,c(r(r({},layoutProps),o),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"The \",mdx(\"a\",r({parentName:\"p\"},{href:\"https://github.com/mljar/mercury\"}),\"Mercury\"),\" is a new framework for converting Jupyter Notebook to a web app. The widgets are constructed based on the YAML config (similar to R Markdown). The user can tweak the values of the widgets and execute the notebook from the top to the bottom. The notebook sharing is as simple as sending a link. What is more, you can decide whether to show or hide the code.\"),mdx(\"p\",null,\"In the talk, I would like to show how the Python notebook can be converted to a web app and deployed to the cloud.\"))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"sessionsAfter":[{"code":"GFGSGN","title":"Leading & growing software teams","speakers":[{"code":"GLMZDC","name":"Radoslav Georgiev","biography":"Generalist. A multi-disciplinary problem solver & a technical team lead.\r\n\r\nCurrently leading & growing teams at HackSoft.\r\n\r\nA programmer from ~10 years, studied Computer Science in the Faculty of Mathematics and Informatics, Sofia University.\r\n\r\nFounder and CEO of HackSoft (Sofia based software company with main focus in Python, Django and Scala) and HackBulgaria (Programming courses, based in Sofia / Bulgaria with main focus of getting the students ready for their first job - either as an intern or a junior developer. Mainly focused in Python and Java)\r\n\r\nAlso doing a lot of teaching - Functional Programming classes (Racket / Haskell) @Faculty of Mathematics and Informatics , Programming with Python and Django @HackBulgaria.\r\n\r\nGitHub - https://github.com/RadoRado/","avatar":"https://program.europython.eu/media/avatars/Radoslav_HackSoft_team_AiYbuH9.jpg","slug":"radoslav-georgiev","affiliation":"HackSoft","homepage":"https://www.hacksoft.io/","twitter":"@Rado_g"}],"submission_type":"Talk","slug":"leading-growing-software-teams","track":"Career, Life,...","state":"confirmed","abstract":"Software development is a team game.\r\n\r\nAs you progress through your career, you might end up in a leadership role, taking care of  your own team, or even of multiple teams.\r\n\r\nAs a team lead, it’s up to you to establish a good working rhythm, set the right expectations, communicate up and down the chain of command and effectively help your team grow in both technical and non-technical terms.\r\n\r\nAs a team lead, you want to enable your team to reach its full potential.\r\n\r\nThe main goal of this talk is to provide pragmatic real-life examples, about how to achieve those things.","abstract_as_a_tweet":"In this talk, we'll explore pragmatic ways, in which you, as a team lead, can enable your team to reach its full potential.","description":"Software development is a team game.\r\n\r\nAs you progress through your career, you might end up in a leadership role, taking care of  your own team, or even of multiple teams.\r\n\r\nAs a team lead, it’s up to you to establish a good working rhythm, set the right expectations, communicate up and down the chain of command and effectively help your team grow in both technical and non-technical terms.\r\n\r\nAs a team lead, you want to enable your team to reach its full potential.\r\n\r\nThe main goal of this talk is to provide pragmatic real-life examples, about how to achieve those things.\r\n\r\nWe are going to cover the following topics:\r\n\r\n1. What’s the role of a team lead?\r\n2. Managing expectations & responsibilities.\r\n3. Establishing a good work rhythm.\r\n4. Establishing a good form of communication.\r\n5. What does team growth look like?\r\n\r\nThis talk is the natural sequel of the following talks from previous EuroPythons:\r\n \r\n- EuroPython 2017 - Practical Debugging - Tips, Tricks and Ways to think - https://www.youtube.com/watch?v=9Ys4gCUtTh8\r\n- EuroPython 2018 - Django structure for scale and longevity - https://www.youtube.com/watch?v=yG3ZdxBb1oo\r\n- EuroPython 2019 - Software patterns for productive teams - https://www.youtube.com/watch?v=fEy68VRmOeQ","duration":"45","python_level":"none","domain_level":"none","delivery":"in-person","room":"Wicklow Hall 1","start":"2022-07-15T11:55:00+01:00","end":"2022-07-15T12:40:00+01:00","talks_in_parallel":["HE98XH","LLC3KD","MBJUKF","MMWYWZ","PQADBJ","TE7K7D"],"talks_after":[],"next_talk_code":null,"prev_talk_code":"ZGSULC","website_url":"https://ep2022.europython.eu/session/leading-growing-software-teams"},{"code":"HE98XH","title":"Machine Translation engines evaluation framework","speakers":[{"code":"GYFSQB","name":"Anton Masalovich","biography":"Machine learning scientist and engineering manager with 15+ years of experience mostly focused on Natural Language Processing, Machine Translation and Document Recognition.\r\nEx-ABBYY, ex-Microsoft, currently working in a machine learning R&D department of a  large healthcare organization. Have a lot of experience of transforming state-of-the-art ML ideas to actual product features.","avatar":null,"slug":"anton-masalovich","affiliation":"Optum","homepage":null,"twitter":null},{"code":"LZRDNM","name":"Sahil Manchanda","biography":null,"avatar":null,"slug":"sahil-manchanda","affiliation":"Optum","homepage":null,"twitter":null}],"submission_type":"Talk","slug":"machine-translation-engines-evaluation-framework","track":"PyData: Deep Learning, NLP, CV","state":"confirmed","abstract":"As an engineers in a ML R&D department of large healthcare enterprise company we were presented with the task to evaluate several Machine Translation engines and choose the one best suited for our corporate needs. To do that we created extendable Python-based framework that allowed us to easily plug-in different Machine Translation engines and compare them across large variety of test datasets with a unified set of quality metrics. Our goal from the start was to create universal MT evaluation framework, that will be useful not only for healthcare domain, but to a wider community as well.\r\n\r\nAt this talk we will present our evaluation framework an will do a walk-through of its capabilities. We also cover how it can be extended to new MT engines, new test datasets and new language pairs. We will also present our evaluation results for several state-of-the-art machine translation engines, both open-source and cloud-based.\r\n\r\nAll the source code of our framework is published to open source:\r\nhttps://github.com/Optum/nmt","abstract_as_a_tweet":"Python-based universal evalaution framework for Machine Translation engines","description":"Task of Machine Translation engine evaluation may be very challenging. Quality of Machine Translation varies greatly depending on domain and language pair. Different MT engines may have different interfaces or APIs and different requirements to run. To add to that, even definition of a good translation may be debatable, with any automatic MT quality metric providing only approximation of actual translation quality. That's why having universal evaluation framework for this task is very important. In our work we tried to create such framework.\r\n\r\n1) We defined base translation class that unified all file handling, batch creation and result processing. As a result of that, only work needed to support new MT engine was creation of small child class that implemented couple of simple functions. That allows us to easily extend our framework to MT engines and new language pairs.\r\n\r\n2) We defined set of test datasets and provided a way to add new datasets to this set. For our evaluation our aim was to create test data that covers both general and healthcare domains  EMEA dataset (https://opus.nlpl.eu/EMEA.php), OPUS-100 (https://opus.nlpl.eu/opus-100.php), Paracrawl (https://paracrawl.eu/) and several others. But our data preparations scripts can be easily extended to other domains and datasets as well.\r\n\r\n3) We defined a set of quality metrics to evaluate results of MT engines. Metrics that we used included BLEU (https://github.com/mjpost/sacrebleu), BERTScore (https://github.com/Tiiiger/bert_score), ROUGE (https://github.com/pltrdy/rouge), TER and CHRF (both also from sacrebleu implementation).\r\n\r\nBeside MT evaluation framework we will present our own evaluation results. For our evaluation we used cloud based engines - Azure Translator (https://azure.microsoft.com/en-us/services/cognitive-services/translator/), Google Translate (https://cloud.google.com/translate/), as well as open-source engines - Marian MT (https://huggingface.co/transformers/model_doc/marian.html), NVIDIA's NeMo (https://docs.nvidia.com/deeplearning/nemo/user-guide/docs/en/stable/nlp/machine_translation.html), Facebook's MBart 50 (https://huggingface.co/facebook/mbart-large-50-one-to-many-mmt), Facebook's M2M100 (https://huggingface.co/facebook/m2m100_418M). For open source engines we tried to use Huggingface's transformer implementation whenever possible. But as we mentioned our framework was designed in a way to be easily extendable to other MT engines and underlying frameworks.\r\n\r\nWe also will present evaluation results for NeMo and MarianMT engines that we fine-tuned specifically for healthcare domain. While these particular results may rather specific to our use case, they help to highlight how our framework can be extended to custom MT engines as well.","duration":"30","python_level":"some","domain_level":"some","delivery":"in-person","room":"Liffey Hall 1","start":"2022-07-15T11:55:00+01:00","end":"2022-07-15T12:25:00+01:00","talks_in_parallel":["GFGSGN","LLC3KD","MBJUKF","MMWYWZ","PQADBJ","TE7K7D"],"talks_after":[],"next_talk_code":null,"prev_talk_code":"S78FW7","website_url":"https://ep2022.europython.eu/session/machine-translation-engines-evaluation-framework"},{"code":"LLC3KD","title":"Game Development with CircuitPython","speakers":[{"code":"CSLXTY","name":"Radomir Dopieralski","biography":"A Python programmer by day, an electronics hobbyist by night. Building spider robots, hand-held game consoles, ergonomic keyboards and all kinds of gadgets. Very much into CircuitPython.","avatar":"https://program.europython.eu/media/avatars/gogles-big_OCjYWs4.jpg","slug":"radomir-dopieralski","affiliation":"RedHat","homepage":"dopieralski.pl","twitter":"deshipu"}],"submission_type":"Talk","slug":"game-development-with-circuitpython","track":"Makers","state":"confirmed","abstract":"With a large selection of handheld devices running CircuitPython, it's natural to want to make games for them. But where to start? What are the options available for the hardware, the libraries and other resources? And how do you use all of that? This talk aims to give a gentle introduction for everyone.","abstract_as_a_tweet":"With a large selection of handheld devices running CircuitPython, it's natural to want to make games for them. But where to start? What are the options available for the hardware, the libraries and other resources? And how do you use all of that?","description":"Making games on small devices is great fun and also a great way to learn. You don't have to worry about breaking anything, and the games tend to be much simpler than on the big computers. And with CircuitPython you don't need to install anything on your computer, all you need is a text editor. But it's not easy to decide what you need exactly: what hardware to get, which libraries to use and how to actually put it all together to spend the minimum time on all that, and maximum time on the game itself? I'm going to go over the available options, their pros and cons, and show some examples to get you started.","duration":"45","python_level":"none","domain_level":"none","delivery":"in-person","room":"The Auditorium","start":"2022-07-15T11:55:00+01:00","end":"2022-07-15T12:40:00+01:00","talks_in_parallel":["GFGSGN","HE98XH","MBJUKF","MMWYWZ","PQADBJ","TE7K7D"],"talks_after":[],"next_talk_code":null,"prev_talk_code":"YJYBHC","website_url":"https://ep2022.europython.eu/session/game-development-with-circuitpython"},{"code":"MBJUKF","title":"Work in Progress: Implementing PEP 458 to Secure PyPI downloads","speakers":[{"code":"ANZZRH","name":"Kairo de Araujo","biography":"I am an Open Source Software Engineer at VMware Inc, a staff member of the VMware Open Source Program Office (OSPO), working on the Security Supply Chain team.\r\nCurrently, I am focused on PyPI.org, Python-TUF, and some contributions to Tern Tools.\r\nAs a Software Engineer, I have contributed to Open Source and writing software since 2013.\r\nI am a former system engineer; however, I use these technologies daily. I have long experience in Infrastructures such as Networking, Cloud, Virtualization, Storage Area Networks, and Storage Disks.\r\nI have worked for IBM, ING, and Forescout in the past.","avatar":"https://program.europython.eu/media/avatars/Kairo_de_Araujo_y22uEvQ.jpg","slug":"kairo-de-araujo","affiliation":"VMware","homepage":"http://kairo.dev","twitter":"@kairoaraujo"},{"code":"H3JGWN","name":"Lukas Pühringer","biography":"Lukas Pühringer is a research scholar and software developer at the NYU Center for Cyber Security (CCS), where he leads the development of The Update Framework (TUF), and has been co-maintaining several of Prof. Justin Cappos’ software projects, most notably the supply chain security framework in-toto. Lukas also supervises students and gives talks about TUF and in-toto.","avatar":null,"slug":"lukas-puhringer","affiliation":"NYU","homepage":null,"twitter":null}],"submission_type":"Talk","slug":"work-in-progress-implementing-pep-458-to-secure-pypi-downloads","track":"Security","state":"confirmed","abstract":"[PEP 458](https://peps.python.org/pep-0458/) uses cryptographic signing on PyPI to protect Python packages against attackers. In this talk we will share our lessons learned from the ongoing implementation work in PyPI/Warehouse with the Python community. How does PEP 458 work and what is TUF? What protection can it offer now and what does it enable in the future? And how am I affected as a Python developer and as a user?","abstract_as_a_tweet":"PEP 458 uses signing on PyPI to protect Python packages against attackers. In this talk we will share lessons learned from its implementation. What is PEP 458? What is TUF? How am I affected as developer or user? What protection do I get now and in the future?","description":"Attacks on software repositories are extremely common and can have a vast impact. A single successful compromise of the content distribution infrastructure can affect millions of users, voluntarily installing the infected packages.\r\n\r\n[PEP 458](https://peps.python.org/pep-0458/) was designed to protect PyPI against a variety of possible attacks on PyPIs own content distribution network and PyPI mirrors, while giving administrators a mechanism to recover from a compromise if it happens. In addition, PEP 458 is a fundamental stepping stone for more advanced protection described in [PEP 480](https://peps.python.org/pep-0480/).\r\n\r\nBoth PEP 458 and 480 implement a specification called [\"The Update Framework\" (TUF)](http://theupdateframework.io/), which introduces a series of roles, keys and metadata formats that are published along with the packages they protect, and can be verified by a client software such as pip.\r\n\r\nOver the past couple of months we have made an effort to integrate the latest version of the Python TUF reference implementation with PyPI/Warehouse (see [draft PR](https://github.com/pypa/warehouse/pull/10870)).\r\n\r\nIn this talk we will give an introduction to PEP 458 and TUF, how it works and what it is good for. We will report from the work-in-progress integration with Warehouse, what challenges we face and how Python developer and user workflows are affected, as well as an expected timeline for the integration. And last but not least, we want to give an outlook of what comes after PEP 458, that is full developer-to-user end-to-end protection of Python packages as described by PEP 480.\r\n\r\nWith our talk we also hope to spark interest in software supply chain security and to encourage the community to get involved by reviewing, commenting and contributing to the PEP 458 and PEP 480 integration efforts.","duration":"30","python_level":"some","domain_level":"none","delivery":"in-person","room":"Liffey B","start":"2022-07-15T11:55:00+01:00","end":"2022-07-15T12:25:00+01:00","talks_in_parallel":["GFGSGN","HE98XH","LLC3KD","MMWYWZ","PQADBJ","TE7K7D"],"talks_after":[],"next_talk_code":null,"prev_talk_code":"GRG9SC","website_url":"https://ep2022.europython.eu/session/work-in-progress-implementing-pep-458-to-secure-pypi-downloads"},{"code":"MMWYWZ","title":"Applications of Python in Computational Chemistry and Material Design","speakers":[{"code":"9W9CWW","name":"Owain Beynon","biography":"PhD Student in Computational Chemistry at Cardiff University. \r\nResearch interests: software development, material science, catalysis, solid state physics.","avatar":null,"slug":"owain-beynon","affiliation":"Cardiff University","homepage":"https://www.cardiff.ac.uk/","twitter":"@owainbeynon"}],"submission_type":"Poster","slug":"applications-of-python-in-computational-chemistry-and-material-design","track":"Posters","state":"confirmed","abstract":"Computational chemistry is the branch of chemistry that studies chemical systems through simulation and involves HPC architecture and software packages. Python has become an integral part of computational modelling of materials in recent years, with development of packages such as the Atomic Simulation Environment (ASE) which is a set of modules for manipulating, running and visualising atomic simulation. Furthermore, ASE integrates seamlessly with many electronic structure software packages, used for calculating the energy and properties of systems based on some level of theory, e.g Density Functional Theory (DFT). Moreover, the combination with other Python packages that integrate with ASE provide an ecosystem for atomic simulations. Packages such as CatLearn, a machine-learning approach used for calculating energies needed for reactions, along with Phonopy and FHI-vibes, both are for studying lattice dynamics of materials, to name a few, provide a comprehensive toolkit for the computational study of materials and chemical systems\r\n\r\nIn our research, such approaches are essential to further our understanding of materials and chemical processes, and of particular interest are materials for green and sustainable processes, such as catalysts used to produce fossil fuel alternatives. In this regard, as Python software becomes increasingly popular for the simulation and study of materials, it also provides the tools and methods needed for tackling some of the challenges of today","abstract_as_a_tweet":"Applications of Python in Computational Chemistry and Material Design","description":"Applications of Python in Computational Chemistry and Material Design\r\nOwain T. Beynon, Alun Owens, Andrew J. Logsdail\r\nCardiff Catalysis Institute, School of Chemistry, Cardiff University, Cardiff, Wales.\r\n\r\nComputational methods afford an insight into the behaviours and properties of materials and recently Python packages have increasingly become a powerful tool for the study of chemical systems. Computational chemistry is the branch of chemistry that studies chemical systems through simulation and involves HPC architecture and software packages. In general, there are two categories of simulation, dynamic and static and of these types, atoms in the system may be described by varying levels of theory: molecular (classical) mechanics (MM), quantum mechanics (QM) or a combination of the two (QM/MM). Static calculations obtain the property of the system at a fixed geometry, whereas dynamic calculations study the evolution of a system over a given timeframe. \r\n\r\nPython has become an integral part of computational modelling of materials in recent years, with development of packages such as the Atomic Simulation Environment (ASE) [1], which is a set of modules for manipulating, running and visualising atomic simulation. Furthermore, ASE integrates seamlessly with many electronic structure software packages, used for calculating the energy and properties of systems based on some level of theory, e.g Density Functional Theory (DFT), such as FHI-aims and VASP. [2,3] Moreover, the combination with other Python packages that integrate with ASE provide an ecosystem for atomic simulations (figure 1). Packages such as CatLearn, [4] a machine-learning approach used for determining transition states and energies needed for reactions, along with Phonopy and FHI-vibes, [5,6] both are for studying lattice dynamics of materials, and Py-ChemShell,[7] used for QM/MM calculations, to name a few, provide a comprehensive toolkit for the computational study of materials and chemical systems. \r\n\r\nIn our research, such approaches as outlined above are essential to further our understanding of materials and chemical processes, and of particular interest are materials for green and sustainable processes such as catalysts used for biofuel production, and battery materials, namely, zeolite Tin-BETA and Prussian Blue, [8-10] respectively. In collaboration with experimentalists, we seek to understand the synthetic methods and properties of these materials, with the aim to further establish them as viable alternatives to fossil fuels. In this regard, as Python software becomes increasingly popular for the simulation and study of materials, it also provides the tools and methods needed for tackling some of the grand challenges of today. \r\n\r\nReferences \r\n[1] A. Hjorth Larsen, et al. J. Phys. Condens. Matter 29 273002 (2017) [2] V. Blum, et al.  Comput. Phys. Commun., 180, 2175–2196 (2009) [3] G. Kresse and J. Hafner, Phys. Rev. B 47 , 558 (1993) [4] A. Garrido Torres, et al. Phys. Rev. Lett., 122, (2019)[5]A. Togo, I. Tanaka, Scr. Mater, 108 (2015). [6] F. Knoop et al. J. Open Source Softw. (2020) [7] Y. Lu, et al. J. Chem. Theory Comput., 15, 1317–1328 (2019) [8] A. Corma et al. Nature, 412, 423–426 (2001) [9] C. Hammond, S. Conrad, I. Hermans, Angew. Chem. Int., 51, 11736–11739 (2012)[10] C. Ling. et al. J. Phys. Chem C 117 (2013)","duration":"45","python_level":"","domain_level":"","delivery":"in-person","room":"Forum","start":"2022-07-15T11:55:00+01:00","end":"2022-07-15T12:55:00+01:00","talks_in_parallel":["GFGSGN","HE98XH","LLC3KD","MBJUKF","PQADBJ","TE7K7D"],"talks_after":[],"next_talk_code":null,"prev_talk_code":null,"website_url":"https://ep2022.europython.eu/session/applications-of-python-in-computational-chemistry-and-material-design"},{"code":"PQADBJ","title":"Unfolding the paper windmills","speakers":[{"code":"7T3KC8","name":"Mai Giménez","biography":"Mai Giménez is a research engineer working at Deepmind. She holds a PhD in natural language processing, and her main research interest is in language and the sociotechnical impacts of these models in the real world.\r\nShe's a former board member of the Spanish Python Association, helped organise several PyConES conferences and is a proud member of the Pyladies.","avatar":"https://program.europython.eu/media/avatars/image_iYEZORj.png","slug":"mai-gimenez","affiliation":"Deepmind","homepage":null,"twitter":null}],"submission_type":"Talk","slug":"unfolding-the-paper-windmills","track":"PyData: Deep Learning, NLP, CV","state":"confirmed","abstract":"Research is done on the shoulders of giants. Luckily and unluckily, those giants spoke paper-English and documented their achievements kind of publicly so we could advance the science. \r\n\r\nIn this talk, we will dissect the structure of a paper, looking for the essential points that will help us understand it and implement it. Following we will get our hands dirty and implement the paper using Python. \r\nIn particular, we will dive into the seminal paper \"Attention is all you need\" and implement a transformer using JAX.\r\n\r\nThe key takeaways from this talk are:\r\n - Demystify academic reading.\r\n - Understand the Transformer architecture.\r\n - An introduction to the JAX ecosystem.","abstract_as_a_tweet":"Understand and implement a transformer in JAX. Not sure if they are windmills or giants but convinced that we will conquer them.","description":"","duration":"30","python_level":"some","domain_level":"some","delivery":"in-person","room":"Liffey Hall 2","start":"2022-07-15T11:55:00+01:00","end":"2022-07-15T12:25:00+01:00","talks_in_parallel":["GFGSGN","HE98XH","LLC3KD","MBJUKF","MMWYWZ","TE7K7D"],"talks_after":[],"next_talk_code":null,"prev_talk_code":"CJNVSR","website_url":"https://ep2022.europython.eu/session/unfolding-the-paper-windmills"},{"code":"TE7K7D","title":"Clean Architectures in Python","speakers":[{"code":"7BS3PU","name":"Leonardo Giordani","biography":"Born in 1977 together with Star Wars, bash, Apple ][, Dire Straits, The Silmarillion, and many other great things.\r\n\r\nI started coding in April 1987 on a Sinclair ZX Spectrum. I then moved to MS-DOS PCs and in 1996 I started using Linux and became interested in operating system internals. I love software architectures, algorithms, mathematics and cryptography.\r\n\r\nI’m mainly interested in open source software. I like both the theoretical and practical aspects of computer science.\r\n\r\nI am currently working as a contractor DevOps and Python developer while I design a DevOps bootcamp that I will run in London from October 2022.\r\n\r\nFrom 2013 I blog some technical thoughts at http://thedigitalcatonline.com.\r\n\r\nIn 2018 I published the free book “Clean Architectures in Python” http://bit.ly/getpycabook","avatar":"https://program.europython.eu/media/avatars/Avatar400x400_cuVmtE6.jpg","slug":"leonardo-giordani","affiliation":"The Digital Cat Services","homepage":"https://www.thedigitalcatonline.com/","twitter":"@tw_lgiordani"}],"submission_type":"Talk","slug":"clean-architectures-in-python","track":"Software Engineering & Architecture","state":"confirmed","abstract":"A brief talk that introduces software developers to the idea of \"clean architecture\" and discusses how to reduce coupling between parts of a software system through well-known strategies such as abstraction and inversion of control.","abstract_as_a_tweet":"Clean Architectures in Python: durability, utility, and beauty in software design","description":"Architectural considerations are often overlooked by developers or completely delegated to a framework. We should start once again discussing how applications are structured, how components are connected and how to lower coupling between different parts of a system, to avoid creating software that cannot easily be maintained or changed. The \"clean architecture\" model predates Robert Martin, who recently brought it back to the attention of the community, and is a way of structuring applications that leverages layers separation and internal APIs to achieve a very tidy, fully-tested, and loosely coupled system.\r\n\r\nThe talk introduces the main ideas of the architecture, showing how the layers can be implemented in Python, following the content of the book \"Clean Architectures in Python\" edited by Leanpub. The book recently reached 25,000 downloads and many readers found it useful to start learning how to test software and how to structure an application without relying entirely on the framework.","duration":"45","python_level":"some","domain_level":"none","delivery":"in-person","room":"Liffey A","start":"2022-07-15T11:55:00+01:00","end":"2022-07-15T12:40:00+01:00","talks_in_parallel":["GFGSGN","HE98XH","LLC3KD","MBJUKF","MMWYWZ","PQADBJ"],"talks_after":[],"next_talk_code":null,"prev_talk_code":"87XUMG","website_url":"https://ep2022.europython.eu/session/clean-architectures-in-python"}],"sessionsInParallel":[{"code":"87XUMG","title":"Why is it slow? Strategies for solving performance problems","speakers":[{"code":"9JJFPM","name":"Caleb Hattingh","biography":"TBD TBD TBD TBD TBD TBD TBD TBD TBD TBD TBD TBD TBD TBD TBD TBD TBD TBD TBD TBD TBD TBD TBD TBD TBD TBD TBD TBD TBD TBD TBD TBD TBD TBD TBD TBD","avatar":"https://program.europython.eu/media/avatars/sqfortekmojitwitch_VVdyZFb.jpg","slug":"caleb-hattingh","affiliation":"Kapiche Pty Ltd","homepage":"tekmoji.com","twitter":null}],"submission_type":"Talk","slug":"why-is-it-slow-strategies-for-solving-performance-problems","track":"Software Engineering & Architecture","state":"confirmed","abstract":"You have a performance problem, and you don't know what to do. All you know is that one of your endpoints is very slow; and perhaps it only affects a certain user. How do you figure out why it's slow, and what can you do to catch performance problems before they hurt users in production? This talk will step through several scenarios involving typical performance problems and how to diagnose them.","abstract_as_a_tweet":"Why is my Python code slow? Strategies for solving performance problems","description":"You have a performance problem, and you don't know what to do. All you know is that one of your endpoints or applications is too slow; and perhaps it only affects a certain user or customer. How do you figure out why it's slow, and what can you do to catch performance problems before they hurt users in production?\r\n\r\nWe'll go through a wide range of strategies for detecting and diagnosing performance problems in typical production workloads. We'll cover both web-based domains as well as backend domains and other analytical applications involving number-crunching and big-data applications.\r\n\r\nWe'll step through the following high-level strategies:\r\n\r\n- Tracing: through instrumentation of your code, you will get detailed traces of where the time is spent in generating your web server responses.\r\n- Profiling: we'll look at profiling strategies using both the Python built-in cProfile tool, as well as awesome 3rd party libraries like pyspy, including how to use these with pytest\r\n- Isolation: how to figure out if performance is affected by CPU, or memory, disk, or network IO limitations.\r\n- Reasoning: we'll look at common scenarios that result in performance regressions such as the needless execution of sub-queries in rendering web views, or algorithmic analysis and \"big-O\" notation, or concurrency problems resulting from exhaustion of threads in a pool and asyncio concurrency limitations resulting from overloaded subscription.\r\n- Prophylaxis: we'll look at how to include benchmarks within your CI pipeline, including with pytest and other technologies to catch performance regressions ahead of time.","duration":"30","python_level":"some","domain_level":"some","delivery":"remote","room":"Liffey A","start":"2022-07-15T11:20:00+01:00","end":"2022-07-15T11:50:00+01:00","talks_in_parallel":["CJNVSR","GRG9SC","S78FW7","YJYBHC","ZGSULC"],"talks_after":["GFGSGN","HE98XH","LLC3KD","MBJUKF","MMWYWZ","PQADBJ","TE7K7D"],"next_talk_code":"TE7K7D","prev_talk_code":null,"website_url":"https://ep2022.europython.eu/session/why-is-it-slow-strategies-for-solving-performance-problems"},{"code":"GRG9SC","title":"Tales of Python Security","speakers":[{"code":"PMWVSA","name":"Steve Dower","biography":"Steve is an engineer who tells people about Python and then gives them excuses to use it and great tools to use it with. He is a core developer and Windows expert for CPython, a member of the Python Security Response Team, and works at Microsoft as a roaming Python expert, making sure Python users are well supported across all their platforms.","avatar":"https://program.europython.eu/media/avatars/Headshot_Python_2q9HWBk.jpg","slug":"steve-dower","affiliation":"Microsoft","homepage":"https://stevedower.id.au","twitter":"zooba"}],"submission_type":"Talk","slug":"tales-of-python-security","track":"Security","state":"confirmed","abstract":"Security vulnerabilities receive huge publicity but also significant secrecy. In this session, we will walk through some of the biggest issues of the last few years from the perspective of a member of the Python Security Response Team. You'll learn how we work to protect all CPython users, how you can help, and how you can help protect yourself from malicious attackers.","abstract_as_a_tweet":"What happens when someone reports a security issue in Python? And what's the worst thing that's been reported? Join this session to hear all about it!","description":"In this session, you'll learn about recent security issues in CPython and the core parts of our ecosystem. You'll hear about the process by which they were filed, how they were reviewed, analysed, shared (when appropriate), resolved and ultimately disclosed to the public.\r\n\r\nAs well as real stories of security vulnerabilities, you'll learn how you can help by responsibly reporting potential issues, and how to protect yourself against common risks, as well as the best ways to find out about major issues and how to respond.","duration":"30","python_level":"none","domain_level":"some","delivery":"in-person","room":"Liffey B","start":"2022-07-15T11:20:00+01:00","end":"2022-07-15T11:50:00+01:00","talks_in_parallel":["87XUMG","CJNVSR","S78FW7","YJYBHC","ZGSULC"],"talks_after":["GFGSGN","HE98XH","LLC3KD","MBJUKF","MMWYWZ","PQADBJ","TE7K7D"],"next_talk_code":"MBJUKF","prev_talk_code":null,"website_url":"https://ep2022.europython.eu/session/tales-of-python-security"},{"code":"S78FW7","title":"When Models Query Models","speakers":[{"code":"SBZRSP","name":"Michal Maciejewski","biography":"Enthusiastic, hard-working software engineer with contagious energy and passion for working on interdisciplinary projects. Focused on delivering high-quality products in a timely manner. Servant leader always eager to learn from and with team members while instilling the ownership, autonomy, and sense of responsibility. \r\n\r\nOver ten years of experience as a software developer for modelling and analysis of complex systems.  Passionate about model-based system engineering solutions improving existing analysis workflows while ensuring reproducibility. Currently, the lead developer of an MLOps framework to support the design of superconducting accelerator magnets. Formerly, a technical lead for an agile team of experts and scientists creating signal monitoring framework for the Large Hadron Collider.","avatar":null,"slug":"michal-maciejewski","affiliation":"ETH Zurich","homepage":null,"twitter":null}],"submission_type":"Talk","slug":"when-models-query-models","track":"PyData: Software Packages & Jupyter","state":"confirmed","abstract":"The design of large-scale engineering systems, including but not limited to aerospace, particle accelerators, nuclear power plants, is carried out by a wide range of numerical models such as CAD files, finite-element models, and machine learning surrogate models to name a few.  In order to provide a uniform modelling interface, we encapsulate numerical models in notebooks. A notebook is controlling model creation, execution, and query of results. Numerical solvers are embedded into Docker containers and provide an isolated and reproducible environment exposing a language-agnostic REST API. A model registry enables efficient queries of models. The overall system is represented as a collection of models that exchange data. Then, the design optimization involves execution of a dependency tree of models to study the impact of a parameter change and perform its optimization. In this contribution, we present a model query mechanism allowing notebook models to query one another. The model dependencies are represented with a graph with suitable processing algorithms. In order to ensure that only affected models are executed we derive and cache a model resolution order. The presented modelling framework relies on open source-technologies (packages: pydantic, Fast API, Jupyter, papermill, scrapbook, containers: Docker and Openshift as well as databases: MongoDB and Redis) and the talk will focus on good practices and design decisions encountered in the process.","abstract_as_a_tweet":"When models query models presents a package for cached model query for notebook based hierarchy of numerical models for modelling of complex physical systems.","description":"","duration":"30","python_level":"some","domain_level":"some","delivery":"remote","room":"Liffey Hall 1","start":"2022-07-15T11:20:00+01:00","end":"2022-07-15T11:50:00+01:00","talks_in_parallel":["87XUMG","CJNVSR","GRG9SC","YJYBHC","ZGSULC"],"talks_after":["GFGSGN","HE98XH","LLC3KD","MBJUKF","MMWYWZ","PQADBJ","TE7K7D"],"next_talk_code":"HE98XH","prev_talk_code":null,"website_url":"https://ep2022.europython.eu/session/when-models-query-models"},{"code":"YJYBHC","title":"Super Search with OpenSearch and Python","speakers":[{"code":"ZLLVEH","name":"Laysa Uchoa","biography":"Laysa is a developer working towards a more diverse and fun Python community by organizing Pyladies Munich Chapter. Her passion for sharing knowledge and OSS has led her to work as developer advocate for Aiven. She help users understand databases and do cool things with them. Besides Python, she like cyberpunk movies, tea, and human languages.","avatar":"https://program.europython.eu/media/avatars/DSC_0672_1_wcU720A.jpg","slug":"laysa-uchoa","affiliation":"Aiven","homepage":null,"twitter":"laysauchoa"}],"submission_type":"Talk","slug":"super-search-with-opensearch-and-python","track":"PyData: Data Engineering","state":"confirmed","abstract":"OpenSearch is an open source and free document database with search and aggregation superpowers, based on Elasticsearch. This session covers how to use OpenSearch to perform both simple and advanced searches on semi-structured data such as a product database.","abstract_as_a_tweet":"Search is pretty useful inside applications, so we'll also discuss how to connect to OpenSearch from existing Python applications, work with data in the database, and perform search and aggregation queries with Python. This is the talk you are searching for!","description":"OpenSearch is an open source and free document database with search and aggregation superpowers, based on Elasticsearch. This session covers how to use OpenSearch to perform both simple and advanced searches on semi-structured data such as a product database. Search is pretty useful inside applications, so we'll also discuss how to connect to OpenSearch from existing Python applications, work with data in the database, and perform search and aggregation queries from Python. This talk is recommended for Python developers whose applications are ready to gain some search superpowers.","duration":"30","python_level":"some","domain_level":"some","delivery":"in-person","room":"The Auditorium","start":"2022-07-15T11:20:00+01:00","end":"2022-07-15T11:50:00+01:00","talks_in_parallel":["87XUMG","CJNVSR","GRG9SC","S78FW7","ZGSULC"],"talks_after":["GFGSGN","HE98XH","LLC3KD","MBJUKF","MMWYWZ","PQADBJ","TE7K7D"],"next_talk_code":"LLC3KD","prev_talk_code":null,"website_url":"https://ep2022.europython.eu/session/super-search-with-opensearch-and-python"},{"code":"ZGSULC","title":"Best practices to open source a product and creating a community around it","speakers":[{"code":"HGSWKF","name":"Adrin Jalali","biography":"I'm a computer scientist / bioinformatician who has turned to be a core developer of `scikit-learn` and `fairlearn`, and work as a Machine Learning Engineer at Hugging Face. I'm also an organizer of PyData Berlin.\r\n\r\nThese days I mostly focus on aspects of machine learning and tools which help with creating more ethical and fair decision making systems. This trend has influenced me to work on `fairlearn`, and to work on aspects of `scikit-learn` which would help tools such as `fairlearn` to work more fluently with the package; and at Hugging Face, my focus is to enable the community of these libraries to be able to share their models more easily and be more open about their work.","avatar":"https://program.europython.eu/media/avatars/Farb3SW3229-w-small_mpaHfiN.png","slug":"adrin-jalali","affiliation":"HuggingFace","homepage":"adrin.info","twitter":"@adrinjalali"}],"submission_type":"Talk","slug":"best-practices-to-open-source-a-product-and-creating-a-community-around-it","track":"Community & Diversity","state":"confirmed","abstract":"In certain areas of the industry open source has become mainstream, whether it be a small part of a product, a “community edition of a product”, or creating a whole business around an open source product. One could assume the only thing required to do so is to make the source code of the project publicly accessible, possibly by putting it on a platform such as GitLab or GitHub, and one couldn’t be more wrong.\r\n\r\nIn this talk we explore those aspects such as the licence and the governance of the project and the impact they can have. Then we talk about common mistakes teams make which create an environment where outsiders don’t necessarily feel welcomed to the project. First impressions matter and it’s important that new contributors and users stay once they encounter the project.","abstract_as_a_tweet":"Best practices to open source a product and creating a community around it","description":"There are many aspects of open sourcing a product which are often overlooked yet greatly impact the community and activities around the project. One of the first things people think about is the licence [1], which is very important, but what people don’t often think about is the governance of it, which impacts the speed, decision making processes, and the kind of engagement one can get from contributors to the project who don’t work in the company.\r\n\r\nNot every project is open sourced for the same purpose. On one side of the “openness” spectrum some projects are out there to give a bit of visibility to what a team is doing or to showcase a research or another product, and on the other spectrum the creators of a project put it out there to create a user and contributing community so that eventually the community would be active enough for the original creators to become a minority in the contributing and governance team. Depending on what the goals are, one needs to create or use a governance model which matches those goals and needs. One can look at the following categories from this perspective [2]:\r\n\r\n- \"Do-ocracy\"\r\n- Founder-leader\r\n- Self-appointing council or board\r\n- Electoral\r\n- Corporate-backed\r\n- Foundation-backed\r\n\r\nThen we talk about some practices which can fend people off when they try to join a community, giving concrete detailed examples on how it can look like while interacting with contributors and users online, such as [3]:\r\n\r\n- Lack of onboarding\r\n- Nothing in writing\r\n- Leadership is a mystery\r\n- No path to success\r\n- Poor communication\r\n- Lack of transparency\r\n- Not seeing ourselves in others\r\n\r\n[1] Licences and Standards, https://opensource.org/licenses\r\n[2] Understanding open source governance models, https://www.redhat.com/en/blog/understanding-open-source-governance-models\r\n[3] Brain Proffitt, Seven Deadly Sins of Open Source Communities","duration":"30","python_level":"none","domain_level":"none","delivery":"in-person","room":"Wicklow Hall 1","start":"2022-07-15T11:20:00+01:00","end":"2022-07-15T11:50:00+01:00","talks_in_parallel":["87XUMG","CJNVSR","GRG9SC","S78FW7","YJYBHC"],"talks_after":["GFGSGN","HE98XH","LLC3KD","MBJUKF","MMWYWZ","PQADBJ","TE7K7D"],"next_talk_code":"GFGSGN","prev_talk_code":null,"website_url":"https://ep2022.europython.eu/session/best-practices-to-open-source-a-product-and-creating-a-community-around-it"}]},"__N_SSG":true}