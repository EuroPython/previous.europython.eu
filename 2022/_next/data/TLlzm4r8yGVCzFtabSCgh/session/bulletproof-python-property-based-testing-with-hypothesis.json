{"pageProps":{"path":"/session/bulletproof-python-property-based-testing-with-hypothesis","session":{"code":"QKS7UE","title":"Bulletproof Python – Property-Based Testing with Hypothesis","speakers":[{"code":"A7BNZH","name":"Michael Seifert","biography":"Michael is a consulting software engineer who helps product teams to develop Python software in the cloud. He worked with many different teams from various industries, but none of them practised property-based testing and only few were familiar with the concept.\r\n\r\nThis prompted him to spread the word about property-based testing and Hypothesis in an effort to help others write more robust and maintainable software.","avatar":"https://program.europython.eu/media/avatars/michael_seifert_-_300x300_KY7yE8t.png","slug":"michael-seifert","affiliation":"digitalernachschub.de","homepage":"https://www.digitalernachschub.de","twitter":"@DNachschub","biographySource":{"compiledSource":"var u=Object.defineProperty,m=Object.defineProperties;var f=Object.getOwnPropertyDescriptors;var r=Object.getOwnPropertySymbols;var s=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;var p=(e,t,o)=>t in e?u(e,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[t]=o,a=(e,t)=>{for(var o in t||(t={}))s.call(t,o)&&p(e,o,t[o]);if(r)for(var o of r(t))i.call(t,o)&&p(e,o,t[o]);return e},d=(e,t)=>m(e,f(t));var h=(e,t)=>{var o={};for(var n in e)s.call(e,n)&&t.indexOf(n)<0&&(o[n]=e[n]);if(e!=null&&r)for(var n of r(e))t.indexOf(n)<0&&i.call(e,n)&&(o[n]=e[n]);return o};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(o){var n=o,{components:e}=n,t=h(n,[\"components\"]);return mdx(MDXLayout,d(a(a({},layoutProps),t),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"Michael is a consulting software engineer who helps product teams to develop Python software in the cloud. He worked with many different teams from various industries, but none of them practised property-based testing and only few were familiar with the concept.\"),mdx(\"p\",null,\"This prompted him to spread the word about property-based testing and Hypothesis in an effort to help others write more robust and maintainable software.\"))}MDXContent.isMDXComponent=!0;\n","scope":{}}}],"submission_type":"Tutorial","slug":"bulletproof-python-property-based-testing-with-hypothesis","track":"Testing","state":"confirmed","abstract":"Property-based testing is a great benefit to the robustness and maintainability of your software. Yet, the technique is still vastly underused in the Python community. The workshop gives a hands-on introduction to Hypothesis and practices different approaches for writing property-based tests.","abstract_as_a_tweet":"Property-based #testing is a great benefit to the robustness and maintainability of your software. Yet, the technique is still underused in the #Python community. #bulletproofpython is a hands-on introduction to Hypothesis and #PBT.","description":"Do you find yourself working through pages of copied and pasted tests to accommodate a simple code change? Does your software frequently break in unexpected ways despite your testing efforts? Don’t despair! Property-based testing could be your way out of that mess. Rather than working harder and writing more test code, property-based testing forces you to work smarter and test more code with fewer tests.\r\n\r\nTraditional tests are example-based. They require the developer to come up with arbitrary inputs and check a system’s behavior against explicit outputs. More often than not, developers only think of inputs that are handled correctly by their code, thus leaving bugs hidden. Property-based tests generate the inputs for you and in many cases they’re more likely to find invalid inputs than humans. The difficulty lies in formulating these test cases.\r\n\r\nAfter this workshop you’ll be comfortable with property-based testing using Hypothesis. You’ll have experience requesting appropriate test data from Hypothesis and in writing tests for common and more advanced properties. At work, your co-workers will be impressed by your unbreakable code ;)\r\n\r\nParticipants are expected to have basic familiarity with unit testing and a testing framework. Provided code examples use pytest.\r\n\r\nThe workshop material can be found here: https://github.com/seifertm/hypothesis-workshop/tree/europython-2022","duration":"180","python_level":"some","domain_level":"some","delivery":"in-person","room":"Wicklow Hall 2A","start":"2022-07-11T09:30:00+01:00","end":"2022-07-11T11:00:00+01:00","talks_in_parallel":["JL7LBG","MWET9Y","UL8E7F","X8HJJ9"],"talks_after":[],"next_talk_code":null,"prev_talk_code":null,"website_url":"https://ep2022.europython.eu/session/bulletproof-python-property-based-testing-with-hypothesis","type":"Tutorial","abstractSource":{"compiledSource":"var c=Object.defineProperty,d=Object.defineProperties;var h=Object.getOwnPropertyDescriptors;var s=Object.getOwnPropertySymbols;var r=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;var p=(t,e,o)=>e in t?c(t,e,{enumerable:!0,configurable:!0,writable:!0,value:o}):t[e]=o,i=(t,e)=>{for(var o in e||(e={}))r.call(e,o)&&p(t,o,e[o]);if(s)for(var o of s(e))a.call(e,o)&&p(t,o,e[o]);return t},u=(t,e)=>d(t,h(e));var y=(t,e)=>{var o={};for(var n in t)r.call(t,n)&&e.indexOf(n)<0&&(o[n]=t[n]);if(t!=null&&s)for(var n of s(t))e.indexOf(n)<0&&a.call(t,n)&&(o[n]=t[n]);return o};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(o){var n=o,{components:t}=n,e=y(n,[\"components\"]);return mdx(MDXLayout,u(i(i({},layoutProps),e),{components:t,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"Property-based testing is a great benefit to the robustness and maintainability of your software. Yet, the technique is still vastly underused in the Python community. The workshop gives a hands-on introduction to Hypothesis and practices different approaches for writing property-based tests.\"))}MDXContent.isMDXComponent=!0;\n","scope":{}},"descriptionSource":{"compiledSource":"var u=Object.defineProperty,y=Object.defineProperties;var c=Object.getOwnPropertyDescriptors;var s=Object.getOwnPropertySymbols;var i=Object.prototype.hasOwnProperty,n=Object.prototype.propertyIsEnumerable;var p=(e,t,o)=>t in e?u(e,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[t]=o,a=(e,t)=>{for(var o in t||(t={}))i.call(t,o)&&p(e,o,t[o]);if(s)for(var o of s(t))n.call(t,o)&&p(e,o,t[o]);return e},h=(e,t)=>y(e,c(t));var d=(e,t)=>{var o={};for(var r in e)i.call(e,r)&&t.indexOf(r)<0&&(o[r]=e[r]);if(e!=null&&s)for(var r of s(e))t.indexOf(r)<0&&n.call(e,r)&&(o[r]=e[r]);return o};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(o){var r=o,{components:e}=r,t=d(r,[\"components\"]);return mdx(MDXLayout,h(a(a({},layoutProps),t),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"Do you find yourself working through pages of copied and pasted tests to accommodate a simple code change? Does your software frequently break in unexpected ways despite your testing efforts? Don\\u2019t despair! Property-based testing could be your way out of that mess. Rather than working harder and writing more test code, property-based testing forces you to work smarter and test more code with fewer tests.\"),mdx(\"p\",null,\"Traditional tests are example-based. They require the developer to come up with arbitrary inputs and check a system\\u2019s behavior against explicit outputs. More often than not, developers only think of inputs that are handled correctly by their code, thus leaving bugs hidden. Property-based tests generate the inputs for you and in many cases they\\u2019re more likely to find invalid inputs than humans. The difficulty lies in formulating these test cases.\"),mdx(\"p\",null,\"After this workshop you\\u2019ll be comfortable with property-based testing using Hypothesis. You\\u2019ll have experience requesting appropriate test data from Hypothesis and in writing tests for common and more advanced properties. At work, your co-workers will be impressed by your unbreakable code ;)\"),mdx(\"p\",null,\"Participants are expected to have basic familiarity with unit testing and a testing framework. Provided code examples use pytest.\"),mdx(\"p\",null,\"The workshop material can be found here: \",mdx(\"a\",a({parentName:\"p\"},{href:\"https://github.com/seifertm/hypothesis-workshop/tree/europython-2022\"}),\"https://github.com/seifertm/hypothesis-workshop/tree/europython-2022\")))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"sessionsAfter":[],"sessionsInParallel":[{"code":"JL7LBG","title":"[CANCELLED] Build your own linters","speakers":[{"code":"JHSJBW","name":"Rahul Jha","biography":"I'm a senior software engineer at https://deepsource.io, where I work on developing tools to improve code health and quality.\r\n\r\nI'm the maintainer of [Vulture](https://github.com/jendrikseipp/vulture), and it will have your dead Python. Thank you!","avatar":"https://program.europython.eu/media/avatars/rahul-profile-picture_VCHth3N.png","slug":"rahul-jha","affiliation":"DeepSource","homepage":"https://deepsource.io","twitter":"@antisemantic"}],"submission_type":"Tutorial","slug":"cancelled-build-your-own-linters","track":"Testing","state":"confirmed","abstract":"Despite a ton of wonderful linters out there, it pays off to scratch your itch and learn how to write one yourself. Anytime a pet peeve starts bothering you in code reviews, you’ll have all the tools at your disposal.","abstract_as_a_tweet":"There's some comments you find yourself make more and more often when reviewing Pull Requests. Let's automate it.","description":"Developers are opinionated, and it reflects in their programming style — not just the way code _looks_, but how it _feels_: its organization and readability. In such cases, maintaining consistency across a project helps everyone involved. One aspect of this is ensuring that there are (at least partial) automated tests to enforce this style.\r\n\r\nThis training aims to enable the audience to write such tests by giving them a tour of code analysis and the vast array of tools it makes available to us. First, we dissect the code using Python's `ast` and `tokenize` modules and object internals like `__dict__`. From there and on, we visit some real-world examples:\r\n- A test to detect unnecessary use of double-quotes. They are such a terrible waste of pixels, after all.\r\n- Flagging the use of list() instead of []. The former is slower – as it requires an extra lookup in \"globals\" – and might result in a bug if the name is rebound to another object.\r\n- Find if statements are nested for more than four levels. It can lead to hard-to-understand, ugly-looking code.\r\n- Look for unused imports. Shred the extra loading time and memory amounting from these unused lines of code.","duration":"180","python_level":"some","domain_level":"some","delivery":"in-person","room":"Wicklow Hall 1","start":"2022-07-11T09:30:00+01:00","end":"2022-07-11T11:00:00+01:00","talks_in_parallel":["MWET9Y","QKS7UE","UL8E7F","X8HJJ9"],"talks_after":[],"next_talk_code":null,"prev_talk_code":null,"website_url":"https://ep2022.europython.eu/session/cancelled-build-your-own-linters"},{"code":"MWET9Y","title":"Three Musketeers: Sherlock Holmes, Mathematics and Python","speakers":[{"code":"CPJQQS","name":"Gajendra Deshpande","biography":"Mr. Gajendra Deshpande holds a Master’s degree i.e., M.Tech. in Computer Science and Engineering from Visvesvaraya Technological University, Belagavi and PG Diploma in Cyber Law and Cyber Forensics from National Law School of India University, Bengaluru India. He is working as Assistant Professor at the Department of Computer Science and Engineering, KLS Gogte Institute of Technology, Belagavi, Karnataka, India. He has a teaching experience of 12+ years and Linux and Network Administration experience of one year. Under his mentorship teams have won Smart India Hackathon 2018, 2019 and 2020. Presented talks at prestigious conferences such as SciPy USA, JuliaCon, PyCon France, PyCon Hong Kong, PyCon Taiwan, COSCUP Taiwan, PyCon Africa, BuzzConf Argentina, EuroPython, PiterPy Russia and SciPy India. Worked as Reviewer and Program Committee member for reputed International Journals and conferences including JOSS, JOSE, SciPy USA, SciPy Japan, JuliaCon, JupyterCon, PyData Global, and PyCon India, and publishers include Manning USA and Oxford Univesity Press. He leads PyData Belagavi and OWASP Belagavi chapters. He is also GitHub Certified Campus Advisor","avatar":"https://program.europython.eu/media/avatars/gcd_vHsVXyh.png","slug":"gajendra-deshpande","affiliation":"KLS Gogte Institute of Technology","homepage":"https://gcdeshpande.github.io/","twitter":"@gcdeshpande"}],"submission_type":"Tutorial","slug":"three-musketeers-sherlock-holmes-mathematics-and-python","track":"Education, Teaching & Further Training","state":"confirmed","abstract":"Mathematics is a science and one of the most important discoveries of the human race on earth. Math is everywhere and around us. It is in nature, music, sports, economics, engineering, and so on.  In our daily life, we use mathematics knowingly and unknowingly.  Many of us are unaware that forensic experts use mathematics to solve crime mysteries. In this workshop, we will explore how Sherlock Holmes, the famous fictional detective character created by Sir Arthur Conan Doyle uses Mathematics and Python programming language to solve crime mysteries. In short, the workshop begins with an introduction to forensic mathematics and covers basic principles thereby setting the stage. Then, we will solve simple crime puzzles using mathematics and simple python scripts. Finally, we will solve a few complex hypothetical crime mysteries using advanced python concepts. The participants will learn how to use the concepts of mathematics such as statistics, probability, trigonometry, and graph theory, and python and its packages such as SciPy, NumPy, and Matplotlib to solve the crime puzzles.","abstract_as_a_tweet":"Solving crime mysteries with Python and mathematics and explore the unknown field of forensic mathematics","description":"Mathematics is a science and one of the most important discoveries of the human race on earth. Math is everywhere and around us. It is in nature, music, sports, economics, engineering, and so on.  In our daily life, we use mathematics knowingly and unknowingly.  Many of us are unaware that forensic experts use mathematics to solve crime mysteries. In this workshop, we will explore how Sherlock Holmes, the famous fictional detective character created by Sir Arthur Conan Doyle uses Mathematics and Python programming language to solve crime mysteries. In short, the workshop begins with an introduction to forensic mathematics and covers basic principles thereby setting the stage. Then, we will solve simple crime puzzles using mathematics and simple python scripts. Finally, we will solve a few complex hypothetical crime mysteries using advanced python concepts. The participants will learn how to use the concepts of mathematics such as statistics, probability, trigonometry, and graph theory, and python and its packages such as SciPy, NumPy, and Matplotlib to solve the crime puzzles.   \r\n\r\n<b>Outline</b>\r\n<b>1. Introduction to Forensic Mathematics and overview of basic concepts (25 Minutes)</b>\r\n- Numbers and their representation\r\n- Units of Measurements\r\n- Basic chemical calculations\r\n- Functions, Formulae and equations\r\n- Pythagoras Theorem\r\n- Trigonometric methods\r\n- Graphs\r\n- Statistics and probability\r\n\r\n<b>2. Problems</b>\r\n- Estimate the pressure of a shoe print on a soft ground (05 Minutes)\r\n- Calculate the uncertainty given the measurement of bullet diameter (05 Minutes)\r\n- Calculate the mean molar mass (10 Minutes)\r\n- Calculate the percentage of concentrations (10 Minutes)\r\n\r\n<b>------BREAK -------- (05 Minutes)</b>\r\n\r\n- Compute bloodstain thickness (05 Minutes)\r\n- Calculate terminal velocity for a fine blood droplet (05 Minutes)\r\n- Calculate the persistence of gunshot residue particles in air (05 Minutes)\r\n- Calculate the impact speed and estimate the drop height of blood droplet (05 Minutes)\r\n- Post-mortem body cooling (05 minutes)\r\n- Ricochet analysis and aspects of ballistics (10 Minutes)\r\n- Suicide, Accident or murder? (05 Minutes)\r\n- Blood stain pattern analysis (10 minutes)\r\n- Persistence of hair, fibres, and flints on clothing (05 minutes) \r\n\r\n<b>-----------BREAK-----------  (05 Minutes)</b> \r\n\r\n- Determine the time since death (05 Minutes)\r\n- Determine the age from bone or tooth material (05 Minutes)\r\n- Matching of hair evidence (05 Minutes)\r\n- Matching bite marks (05 Minutes)\r\n- DNA Profiling: Genotype and allele calculations (10 Minutes)\r\n\r\n<b>3. Advanced Problems</b> \r\n- A Game of Shadows (10 Minutes)\r\n-  Bicycle Problem (10 Minutes)\r\n-  Detect the location of a serial killer (10 Minutes)","duration":"180","python_level":"some","domain_level":"none","delivery":"in-person","room":"Wicklow Hall 2B","start":"2022-07-11T09:30:00+01:00","end":"2022-07-11T11:00:00+01:00","talks_in_parallel":["JL7LBG","QKS7UE","UL8E7F","X8HJJ9"],"talks_after":[],"next_talk_code":null,"prev_talk_code":null,"website_url":"https://ep2022.europython.eu/session/three-musketeers-sherlock-holmes-mathematics-and-python"},{"code":"UL8E7F","title":"Django Girls Workshop","speakers":[{"code":"D9LMYL","name":"Django Girls Dublin","biography":"Django Girls Dublin has been running workshops since 2016 hosted by RTÉ Digital, PyCon Ireland. The Dublin chapter was started by Vicky Twomey-Lee and Paula Weir.","avatar":"https://program.europython.eu/media/avatars/djangogirlsdub-logo_J1Mwlyy.png","slug":"django-girls-dublin","affiliation":"Django Girls Dublin","homepage":"https://djangogirls.org/en/dublin/","twitter":"DjangoGirlsDub"}],"submission_type":"Special Workshop","slug":"django-girls-workshop","track":"~None of the above","state":"confirmed","abstract":"If you are a female and you want to learn how to make websites, we have good news for you! We are holding a one-day Django workshop for beginners!\r\nApplications open for registration till Sat 2 July.\r\nWe have space only for 30 people, so make sure to fill the form very carefully!","abstract_as_a_tweet":"@DjangoGirlsDub are running 1-day free #Django workshop at EuroPython on Mon 11 Jul. Dets: https://djangogirls.org/en/dublin/","description":"If you are a female and you want to learn how to make websites, we have good news for you! We are holding a one-day workshop for beginners!\r\n\r\nIt will take place on Monday 11th July at Convention Centre Dublin in the heart of Dublin city. We believe that IT industry will greatly benefit from bringing more women into technology. We want to give you an opportunity to learn how to program and become one of us - female programmers!\r\n\r\n**Workshops are free of charge.**\r\n\r\nIf you are a female, know English and have a laptop - you can apply. The workshops are female friendly rather than female only.\r\nIf you are a man and wish to apply that's fine but first preference for places is given to Women. You don’t need to know any technical stuff.\r\nThese workshops are for people who are new to programming.\r\n\r\nAs a workshop attendee you will attend one-day Django workshops during which you will create your first website\r\n\r\nWe have space only for 30 people, so make sure to fill the form very carefully!\r\n\r\n🎟 Applications now open!\r\nApplication process closes on Sat 2 July and you'll be informed about acceptance or rejection by Wed 6 July! \r\n\r\n* More details: https://djangogirls.org/en/dublin/\r\n* Questions? Want to help as a coach? Email: dublin@djangogirls.org","duration":"360","python_level":"none","domain_level":"none","delivery":"in-person","room":"Liffey Hall 1","start":"2022-07-11T09:30:00+01:00","end":"2022-07-11T11:00:00+01:00","talks_in_parallel":["JL7LBG","MWET9Y","QKS7UE","X8HJJ9"],"talks_after":[],"next_talk_code":null,"prev_talk_code":null,"website_url":"https://ep2022.europython.eu/session/django-girls-workshop"},{"code":"X8HJJ9","title":"Pew Pew Workshop","speakers":[],"submission_type":"Special Workshop","slug":"pew-pew-workshop","track":"Events","state":"confirmed","abstract":"Join Radomir Dopieralski, creator of Pew Pew Games Console, and learn how to programme this game console with CircuitPython. Attendees of the Pew Pew workshop will receive a Pew Pew games console to take home with them after the workshop. \r\n\r\nThe Pew Pew workshop is free for EuroPython conference or training ticket holders, however, spaces are limited.","abstract_as_a_tweet":"The PewPew is a simplified game console, programmable with CircuitPython, a variant of MicroPython. It comes with a 64 LED display and a set of small buttons to drive the console.   We will have one device per attendee with training or conference ticket (day p","description":"The PewPew is a simplified game console, programmable with CircuitPython, a variant of MicroPython. It comes with a 64 LED display and a set of small buttons to drive the console. \r\n\r\nWe will have one device per attendee with a training or conference ticket (day pass holders are not eligible).\r\n\r\nThis workshop will teach you how to program the consoles and help with any questions you may have, we have arranged a special workshop room Tuesday, where Radomir and his team will run the workshop focusing on the PewPew. You will learn how to write small programs and games.\r\n\r\nOur hope is that you will take this knowledge home and spread the word about how much fun Python is – especially for younger users.\r\n\r\nThe Pew Pew workshop is free for EuroPython conference or training ticket holders, and spaces limited to 30 people.\r\n\r\n\r\nReferences\r\n- Radomir Dopieralski: https://hackaday.io/deshipu\r\n- PewPew Documentation, with a tutorial: https://pewpew.rtfd.io\r\n- Project page: https://hackaday.io/project/159733\r\n- GitHub repository: https://github.com/pewpew-game\r\n- CircuitPython documentation: https://circuitpython.rtfd.io\r\n- Latest firmware download: https://circuitpython.org/board/pewpew10","duration":"360","python_level":"none","domain_level":"none","delivery":"in-person","room":"Liffey Hall 2","start":"2022-07-11T09:30:00+01:00","end":"2022-07-11T11:01:00+01:00","talks_in_parallel":["JL7LBG","MWET9Y","QKS7UE","UL8E7F"],"talks_after":[],"next_talk_code":null,"prev_talk_code":null,"website_url":"https://ep2022.europython.eu/session/pew-pew-workshop"}]},"__N_SSG":true}